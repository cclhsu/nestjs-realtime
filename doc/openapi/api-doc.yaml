openapi: 3.0.0
paths:
  /hello/string:
    get:
      operationId: HelloController_getHelloStringRest
      summary: Get Hello String
      parameters: []
      responses:
        "200":
          description: Hello String
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/HelloStringResponseDTO"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
      tags: &a1
        - Hello
  /hello/json:
    get:
      operationId: HelloController_getHelloJsonRest
      summary: Get Hello JSON
      parameters: []
      responses:
        "200":
          description: Hello JSON
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HelloJsonResponseDTO"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
      tags: *a1
  /webhook/register:
    put:
      operationId: WebhookServerController_registerWebhook
      summary: Register a webhook
      parameters: []
      requestBody:
        required: true
        description: Webhook Registration Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookInfoDTO"
      responses:
        "200":
          description: Webhook Registration Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookRegistrationResponseDTO"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
      tags: &a2
        - webhook
  /webhook/handle-event:
    post:
      operationId: WebhookServerController_handleWebhookEvent
      summary: Handle webhook event
      parameters: []
      requestBody:
        required: true
        description: Webhook Event Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventDataDTO"
      responses:
        "200":
          description: Webhook Registration Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookRegistrationResponseDTO"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
      tags: *a2
  /webhook/unregister/{webhookId}:
    delete:
      operationId: WebhookServerController_unregisterWebhook
      summary: Unregister a webhook
      parameters:
        - name: webhookId
          required: true
          in: path
          description: Webhook ID
          schema:
            type: string
      requestBody:
        required: true
        description: Webhook Registration Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookInfoDTO"
      responses:
        "200":
          description: Webhook Registration Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookRegistrationResponseDTO"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
      tags: *a2
  /webhook/list:
    get:
      operationId: WebhookServerController_listRegisteredWebhooks
      summary: List registered webhooks
      parameters: []
      responses:
        "200":
          description: List of registered webhooks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WebhookInfoDTO"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
      tags: *a2
  /webhook/update/{webhookId}:
    post:
      operationId: WebhookServerController_updateWebhook
      summary: Update a webhook
      parameters:
        - name: webhookId
          required: true
          in: path
          description: Webhook ID
          schema:
            type: string
      requestBody:
        required: true
        description: Webhook Registration Data
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WebhookInfoDTO"
      responses:
        "200":
          description: Webhook Registration Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebhookRegistrationResponseDTO"
        "500":
          description: Internal Server Error
          content:
            application/json: {}
      tags: *a2
info:
  title: HTTPS API
  description: HTTPS API documentation
  version: "1.0"
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    HelloStringResponseDTO:
      type: object
      properties: {}
    DataDTO:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    HelloJsonResponseDTO:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/DataDTO"
    WebhookConfigDTO:
      type: object
      properties:
        secret:
          type: string
          description: Webhook secret
        isActive:
          type: boolean
          description: Webhook is active
        type:
          type: string
          description: Webhook type
      required:
        - secret
        - isActive
        - type
    WebhookInfoDTO:
      type: object
      properties:
        id:
          type: string
          description: Webhook ID
        url:
          type: string
          description: Webhook URL
        expiryDate:
          format: date-time
          type: string
          description: Webhook expiry date
        config:
          description: Webhook config
          allOf:
            - $ref: "#/components/schemas/WebhookConfigDTO"
      required:
        - id
        - url
        - expiryDate
        - config
    WebhookRegistrationResponseDTO:
      type: object
      properties:
        success:
          type: boolean
          description: Success
        message:
          type: string
          description: Message
        data:
          type: object
          description: Webhook data
      required:
        - success
        - message
        - data
    EventDataDTO:
      type: object
      properties:
        id:
          type: string
          description: Event ID
        type:
          type: string
          description: Event type
        data:
          type: object
          description: Event data
      required:
        - id
        - type
        - data
